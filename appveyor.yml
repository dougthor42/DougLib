# This file taken directly from DRMaclver's hypothesis package.
# https://github.com/DRMacIver/hypothesis
# I will edit accordingly once I get my project going
#
# Also taken from
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml

#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

### ----------------------
### General Configuration
### ----------------------

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.4"
      PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # install dependencies
  # Scipy doesn't have a wheel on PyPI, so I need to install it
  # from a downloaded wheel. Also means I can't use `pip install -r
  # requirements.txt` to install any other items :-(
#  - pip install -r requirements.txt --no-cache-dir
  - "%CMD_IN_ENV% python -m pip install numpy"
  - "%CMD_IN_ENV% python -m pip install ./build_reqs/scipy-0.17.0-cp34-none-win_amd64.whl"
  - "%CMD_IN_ENV% python -m pip install matplotlib"
  - "%CMD_IN_ENV% python -m pip install colorama"
  - "%CMD_IN_ENV% python -m pip install -r dev-requirements.txt"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  #- "%CMD_IN_ENV% nosetests"
  - "%CMD_IN_ENV% green douglib -vvv -s 1"

after_test:
#  # if tests OK, create whl package
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

