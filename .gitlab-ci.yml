stages:
  - init
  - test
  - build
  - docs
  - deploy
  - cleanup

variables:
  VENV_ROOT: C:\temp\builds
  VENV_PY35: C:\temp\builds\python35_x64
  PYPI_URL: http://tphweb.tph.local/pypi

# Set environment vars
before_script:
  # Create the build dir environment variable.
  - set BUILD_DIR=%VENV_PY35%\%CI_PROJECT_ID%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PROJECT_NAMESPACE%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PROJECT_NAME%
  - set BUILD_DIR=%BUILD_DIR%__%CI_PIPELINE_ID%
  - set BUILD_DIR=%BUILD_DIR%__%CI_COMMIT_REF_NAME%
  - echo %BUILD_DIR%

  - call C:\WinPython35\scripts\env.bat
  - python -c "import sys;print(sys.version)"
  - REM ~~~~~~~~~~~~~~~~~~~~ End Before Script ~~~~~~~~~~~~~~~~~~~~

install:
  stage: init
  when: always
  tags:
    - python
  script:
    - python -m venv --clear %BUILD_DIR%
    - call %BUILD_DIR%\Scripts\activate.bat
    # Can't upgrade pip in place.
    # See https://github.com/pypa/pip/issues/1299#issuecomment-188198496
    - python -m pip install --upgrade --no-cache-dir pip setuptools wheel

    - pip install -r requirements.txt --no-cache-dir
    - python -m pip install -r dev-requirements.txt --no-cache-dir

test:
  stage: test
  when: on_success
  tags:
    - python
  script:
    - call %BUILD_DIR%\Scripts\activate.bat
    - green -vvv -s 1 -W -t douglib

build:
  stage: build
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call %BUILD_DIR%\Scripts\activate.bat
    - python setup.py sdist --formats=gztar,zip
    - python setup.py bdist_wheel
  artifacts:
    paths:
      - dist/*

docs:
  stage: docs
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call %BUILD_DIR%\Scripts\activate.bat

    - python -m pip install -i %PYPI_URL% --trusted-host tphweb.tph.local MarkupSafe
    - python -m pip install sphinx sphinx_rtd_theme

    - cd docs
    - python upload_docs.py
    - cd ..

deploy:
  stage: deploy
  environment:
    name: production
    url: $PYPI_URL/simple/douglib
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call %BUILD_DIR%\Scripts\activate.bat
    - python -m pip install --upgrade twine
    - dir dist\*.zip /b/s > temp.txt
    # Read that path into an environment variable.
    - set /p VAR=<temp.txt
    - echo %VAR%
    - twine register --repository %PYPI_URL% --repository-url %PYPI_URL% -u '' -p '' %VAR%
    - twine upload --repository %PYPI_URL% --repository-url %PYPI_URL% -u '' -p '' dist/*

clean_up:
  stage: cleanup
  when: always
  tags:
    - python
  script:
    - REM ==================== clean_up ====================
    - rd /S /Q %BUILD_DIR%
