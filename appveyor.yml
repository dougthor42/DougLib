### ----------------------
### General Configuration
### ----------------------

environment:
  global:
    WXPYTHON_SNAPSHOTS: "https://wxpython.org/Phoenix/snapshot-builds"

  matrix:
#    - PYTHON: "C:\\Python27"
#    - PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python34-x64"
#    - PYTHON: "C:\\Python35"
#    - PYTHON: "C:\\Python35-x64"
#    - PYTHON: "C:\\Python36-x64"

install:
  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"

  # install dependencies
  # Scipy doesn't have a wheel on PyPI, so I need to install it
  # from a downloaded wheel. Also means I can't use `pip install -r
  # requirements.txt` to install any other items :-(
#  - pip install -r requirements.txt --no-cache-dir
  - "%PYTHON%\\python.exe -m pip install numpy"
  - "%PYTHON%\\python.exe -m pip install ./build_reqs/scipy-0.17.0-cp34-none-win_amd64.whl"
  - "%PYTHON%\\python.exe -m pip install matplotlib"
  - "%PYTHON%\\python.exe -m pip install colorama"
  - "%PYTHON%\\python.exe -m pip install -r dev-requirements.txt"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  #- "%CMD_IN_ENV% nosetests"
  - "%PYTHON%\\python.exe green douglib -vvv -s 1"

after_test:
#  # if tests OK, create whl package
  - "%PYTHON%\\python.exe python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

